server:
  port: 8080
spring:
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  # 修改代码后自动重启
  devtools:
    restart:
      enabled: true
  dispatchserver:
    serverurl: http://192.168.1.7:8082
  conditionserver:
    serverurl: http://192.168.1.7:8083
  # 数据源（应该全部加密）
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    dynamic:
      primary: testcenter
      strict: false
      datasource:
        testcenter:
          # 连接，注意各个配置，尤其是要一次性执行多条 SQL 时，要 allowMultiQueries=true
          url: jdbc:mysql://192.168.1.7:3406/testcenter?useUnicode=true&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=UTC
          # 用户名 root
          username: MyEnc({k/LqLqGoeBEoMz+MLuB6cg==})
          # 密码 123456
          password: MyEnc({I6NT3SWbkubdgO2sXBEivg==})
          # 驱动类
          driver-class-name: com.mysql.jdbc.Driver
        testreport:
          # 连接，注意各个配置，尤其是要一次性执行多条 SQL 时，要 allowMultiQueries=true
          url: jdbc:mysql://192.168.1.7:3406/testreport?useUnicode=true&useSSL=false&allowMultiQueries=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=UTC
          # 用户名 root
          username: MyEnc({k/LqLqGoeBEoMz+MLuB6cg==})
          # 密码 123456
          password: MyEnc({I6NT3SWbkubdgO2sXBEivg==})
          # 驱动类
          driver-class-name: com.mysql.jdbc.Driver
      druid: #以下是全局默认值，可以全局更改
        #监控统计拦截的filters
        filters: stat,wall,slf4j,config
        #配置初始化大小/最小/最大
        initial-size: 1
        min-idle: 1
        max-active: 20
        #获取连接等待超时时间
        max-wait: 60000
        #间隔多久进行一次检测，检测需要关闭的空闲连接
        time-between-eviction-runs-millis: 60000
        #一个连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 'x'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 20
        useGlobalDataSourceStat: true
        stat:
          merge-sql: true
          log-slow-sql: true
          slow-sql-millis: 2000
    druid:
      # 监控页面
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: MyEnc({k/LqLqGoeBEoMz+MLuB6cg==})
        login-password: MyEnc({I6NT3SWbkubdgO2sXBEivg==})
  cache:
    # 缓存类型
    type: redis
    redis:
      # key 前缀
      key-prefix: admin_dev
      # 过期时间
      time-to-live: 60s
  redis:
    # 数据库索引（默认为0）
    database: 0
    # 服务器地址
    host: 192.168.1.7
    # 服务器连接端口
    port: 6479
    # 服务器连接密码 root
    #password: MyEnc({GuNvqa47CNCxot2hgjVF6YEwEkzQNsJ4C7UsShorwu4=})
    jedis.pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1ms
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0
      testOnBorrow: false
  #  domain:
  #    allowdomain: http://192.168.130.87,http://localhost:9999

  profiles:
    # 激活的配置
    active: dev
  # 终端彩色输出信息
  output.ansi.enabled: ALWAYS
  resources:
    # 不映射工程中的静态资源文件比如：html、css
    # 如果某些情况需要映射
    # 比如 swagger2，可以在 addResourceHandlers 和 addViewControllers 中特别添加，参考 WebMvcConfig
    add-mappings: false
  mvc:
    # 当出现 404 错误时，直接抛出异常（默认是显示一个错误页面）
    throw-exception-if-no-handler-found: true
  freemarker:
    # 关闭模版检查
    checkTemplateLocation: false

rsa:
  # 私钥位置
  # private-key-path: rsa/private-key.pem
  # 公钥位置
  # public-key-path: rsa/public-key.pem
  use-file: false
  private-key: MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEA2Xjcb+LtTzoPalaHpRDvCGt10f1AOpMGhmNvJKTewhLZb8ChmcLAkCFhh9C1jqpnin2hbAf05ALtn/xLdboznwIDAQABAkEAhc3iO4kxH9UGVRQmY352xARyOqCKWz/I/PjDEpXKZTdWs1oqTM2lpYBlpnV/fJ3Sf2es6Sv6reLCLP7MZP1KGQIhAP0+wZ0c1YBVJvkkHHmhnGyaU1Bsb1alPY4A2sM97Q0lAiEA29Z7rVhw4Fgx201uhnwb0dqiuXfCZM1+fVDyTSg0XHMCIBZencGgE2fjna6yNuWzldquAx/+hBM2Q2qwvqIybScVAiEAlFhnnNHRWZIqEpJtwtJ8819V71GhG+SPNoEpAGfg7YECIHPReHdJdfBehhD1o63xH+gTZqliK4n6XvBhkcyWNYdS
  public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANl43G/i7U86D2pWh6UQ7whrddH9QDqTBoZjbySk3sIS2W/AoZnCwJAhYYfQtY6qZ4p9oWwH9OQC7Z/8S3W6M58CAwEAAQ==

jasypt.encryptor:
  # 先 RSA + 后 Base64 加密的密码
  # 在 JasyptConfig#myStringEncryptor 中先解密后再使用
  password: VQoiLSHvARy1uHWnZGb8dLwy8Mx9wvanJq1oDT/0fudbF0tjs8LWYkGGPQdIkBjioms1RcQNOoYQRH8gAtphPg==
  # 自定义的加密器
  bean: myStringEncryptor
  # 自定义被加密值的发现器
  property:
    detector-bean: myEncryptablePropertyDetector

mybatis:
  # 存放实体的位置
  type-aliases-package: com.zoctan.api.entity
  # 存放 mapper 映射文件的位置
  mapper-locations: classpath:mapper/*.xml

mapper:
  # 多个接口时逗号隔开
  mappers: com.zoctan.api.core.mapper.MyMapper
  # insert 和 update 中，判断字符串类型 != ''
  not-empty: false
  # 取回主键的方式
  identity: MYSQL

# 分页插件
# https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md
pagehelper:
  # pageSize=0 时查出所有结果，相当于没分页
  page-size-zero: true
  # 数据库方言
  helperDialect: mysql
  # 分页合理化
  # pageNum <= 0 时会查询第一页
  # pageNum > pages（超过总数时），会查询最后一页
  reasonable: true
  # 支持通过 Mapper 接口参数来传递分页参数
  supportMethodsArguments: true

# Json web token
jwt:
  # 管理后台过期时间
  admin-expire-time: 1d
  # 小程序前台过期时间
  wechat-expire-time: 30d
  # claim 权限 key
  claim-key-auth: auth
  # 请求头或请求参数的 key
  header: Authorization
  # token 类型
  token-type: Bearer

# 日志
logging:
  #  # 以文件方式记录日志
  level.com.zo ctan.api: debug
  file: testcenterservice.log
  #  # 设置目录
  path: /Users/zhaoks/dangdang/autotester-api/testcenterservice/log
