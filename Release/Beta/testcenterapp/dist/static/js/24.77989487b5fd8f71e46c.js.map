{"version":3,"sources":["webpack:///src/views/executecenter/testtask/index.vue","webpack:///./src/views/executecenter/testtask/index.vue?f130","webpack:///./src/views/executecenter/testtask/index.vue","webpack:///./src/api/executecenter/executeplanparam.js"],"names":["testtask","filters","statusFilter","status","published","draft","deleted","data","itemKey","ParamsdialogStatus","datevisible","timevisible","itemplanKey","itemcaseKey","planbusinessdiclist","tmpexecuteplanname","tmpcasedeployunitname","tmpcaseapiname","tmpcaseexecuteplanid","tmpcasecasetype","show","PerformanceVisible","enviromentnameList","apiList","deployunitList","multipleSelection","casemultipleSelection","executeplanList","testcaseList","testcaselastList","executeplancaseList","executeplancaseexistList","executeplancaseremovetList","executeplanstopList","tmpplanbatchList","paramsList","listLoading","caselistLoading","total","casetotal","apiQuery","page","size","deployunitname","listQuery","executeplanname","caselistQuery","apiname","executeplanid","casetype","dialogStatus","dialogFormVisible","casedialogFormVisible","batchdialogFormVisible","CollectionParamsFormVisible","modifyparamdialogFormVisible","loadcase","loadbatch","textMap","updateRole","update","add","paramstextMap","diclevelQuery","diccode","btnLoading","casebtnLoading","execbtnLoading","tmpexecuteplan","id","enviromentname","envid","usetype","businesstype","ip","memo","creator","runmode","tmpplanbatch","batchname","exectype","exectmpdate","execdate","exectime","tmpplanenv","tmpapicases","casename","casejmxname","casecontent","expect","level","tmpparam","paramstype","keyname","keyvalue","tmpep","search","searchcase","searchparam","computed","extends_default","Object","vuex_esm","created","this","getexecuteplanList","getapiList","getdepunitList","getenviromentallList","getdatabydiccodeList","methods","_this","dictionary","then","response","list","catch","res","$message","error","unix2CurrentTime","utils","searchparamsbyepid","_this2","console","log","executeplanparam","stopexecuteplanList","_this3","i","length","splice","_i","push","executeplan","success","savebatchandexecuteplancase","_this4","$refs","validate","valid","executeplanbatch","executeplancase","_this5","_i2","planid","handleClickTableRow","row","event","column","handleSelectionChange","rows","casehandleClickTableRow","casehandleSelectionChange","exectypeselectChanged","e","paramstypeselectChanged","_this6","execplanname","tmpexecplanname","tmpbatchname","searchBy","_this7","Math","random","handleSizeChange","handleCurrentChange","getIndex","index","paramgetIndex","enviromentselectChanged","selectChanged","_this8","api","_this9","_this10","testenviroment","_this11","depunit","getcaseList","_this12","apicases","apicasesList","searchcaseBy","searchtestplanexistcase","gettestcaselastList","_this13","asyncToGenerator_default","regenerator_default","a","mark","_callee","j","wrap","_context","prev","next","testcaseid","checkstats","stop","searchcaseBydepandapi","_this14","_callee2","_context2","_this15","executeplantestcase","$nextTick","caseTable","toggleRowSelection","casehandleSizeChange","casehandleCurrentChange","casegetIndex","showAddexecuteplanDialog","name","showplanparamsDialog","showAddapiparamsDialog","showUpdateparamsDialog","showplanbatchDialog","_this16","addparams","_this17","updatparam","_this18","removeexecuteplanparam","_this19","$confirm","confirmButtonText","cancelButtonText","type","info","showUpdateexecuteplanDialog","addexecuteplantestcase","_this20","deployunitid","apiid","removeexecuteplantestcase","_this21","findflag","showTestCaseDialog","updateexecuteplan","_this22","removeexecuteplan","_this23","isUniqueDetail","executecenter_testtask","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","hasPermission","icon","nativeOn","click","$event","preventDefault","_v","_e","placeholder","keyup","indexOf","_k","keyCode","key","model","value","callback","$$v","$set","expression","prop","label","_l","businessdicitem","dicitmevalue","loading","on","directives","rawName","modifiers","body","ref","element-loading-text","border","fit","highlight-current-row","row-click","selection-change","width","align","scopedSlots","_u","fn","scope","domProps","textContent","_s","$index","createTime","lastmodifyTime","current-page","page-size","page-sizes","layout","size-change","current-change","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__","params","__WEBPACK_IMPORTED_MODULE_0__utils_request__","url","method","executeplanForm","executeplanId"],"mappings":"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","file":"static/js/24.77989487b5fd8f71e46c.js","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form :inline=\"true\">\n        <el-form-item>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            icon=\"el-icon-refresh\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"getexecuteplanList\"\n          >刷新</el-button>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"showplanbatchDialog\"\n          >运行</el-button>\n        </el-form-item>\n\n        <span v-if=\"hasPermission('executeplan:search')\">\n          <el-form-item>\n            <el-input v-model=\"search.executeplanname\" @keyup.enter.native=\"searchBy\" placeholder=\"任务名称\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"businesstype\" label=\"业务类型：\">\n            <el-select v-model=\"search.businesstype\" placeholder=\"业务类型\">\n              <el-option label=\"请选择\" value=\"\" />\n              <div v-for=\"(businessdicitem, index) in planbusinessdiclist\" :key=\"index\">\n                <el-option :label=\"businessdicitem.dicitmevalue\" :value=\"businessdicitem.dicitmevalue\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n      </el-form>\n    </div>\n    <el-table\n      ref=\"fileTable\"\n      :data=\"executeplanList\"\n      :key=\"itemplanKey\"\n      @row-click=\"handleClickTableRow\"\n      @selection-change=\"handleSelectionChange\"\n      v-loading.body=\"listLoading\"\n      element-loading-text=\"loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column\n        type=\"selection\"\n        width=\"40\">\n      </el-table-column>\n      <el-table-column label=\"编号\" align=\"center\" width=\"50\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"></span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"任务名称\" align=\"center\" prop=\"executeplanname\" width=\"100\"/>\n      <el-table-column label=\"envid\" align=\"center\" v-if=\"show\" prop=\"envid\" width=\"50\"/>\n      <el-table-column label=\"状态\" align=\"center\" prop=\"status\" v-if=\"show\" width=\"50\"/>\n      <el-table-column label=\"业务类型\" align=\"center\" prop=\"businesstype\" width=\"100\"/>\n      <el-table-column label=\"执行环境\" align=\"center\" prop=\"enviromentname\" width=\"100\"/>\n      <el-table-column label=\"类型\" align=\"center\" prop=\"usetype\" width=\"60\"/>\n      <el-table-column label=\"运行模式\" align=\"center\" prop=\"runmode\" width=\"80\"/>\n      <el-table-column label=\"操作人\" align=\"center\" prop=\"creator\" width=\"60\"/>\n      <el-table-column label=\"描述\" align=\"center\" prop=\"memo\" width=\"220\"/>\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"140\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.createTime) }}</template>\n      </el-table-column>\n      <el-table-column label=\"最后修改时间\" align=\"center\" prop=\"lastmodifyTime\" width=\"140\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.lastmodifyTime) }}\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"search.page\"\n      :page-size=\"search.size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30, 40]\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n    ></el-pagination>\n  </div>\n</template>\n<script>\n  import {\n    getapicasesList as getapicasesList,\n    search as getapicases\n  } from '@/api/assets/apicases'\n  import { search as getapiList } from '@/api/deployunit/api'\n  import { getdepunitList as getdepunitList } from '@/api/deployunit/depunit'\n  import { addexecuteplanbatch as addexecuteplanbatch } from '@/api/executecenter/executeplanbatch'\n  import { searchcases as searchtestplancases, addexecuteplantestcase, removeexecuteplantestcase } from '@/api/executecenter/executeplantestcase'\n  import { checkplancondition, search, updateexecuteplan, removeexecuteplan, executeplan, updateexecuteplanstatus } from '@/api/executecenter/executeplan'\n  import { unix2CurrentTime } from '@/utils'\n  import { getenviromentallList } from '@/api/enviroment/testenviroment'\n  import { getdatabydiccodeList } from '@/api/system/dictionary'\n  import { searchparamsbyepid, addexecuteplanparam, updateexecuteplanparams, removeexecuteplanparam } from '@/api/executecenter/executeplanparam'\n\n  import { mapGetters } from 'vuex'\n\n  export default {\n    filters: {\n      statusFilter(status) {\n        const statusMap = {\n          published: 'success',\n          draft: 'gray',\n          deleted: 'danger'\n        }\n        return statusMap[status]\n      }\n    },\n    data() {\n      return {\n        itemKey: 0,\n        ParamsdialogStatus: '',\n        datevisible: false,\n        timevisible: false,\n        itemplanKey: null,\n        itemcaseKey: null,\n        planbusinessdiclist: [], // 执行计划字典表业务类型列表\n        tmpexecuteplanname: '',\n        tmpcasedeployunitname: null,\n        tmpcaseapiname: null,\n        tmpcaseexecuteplanid: null,\n        tmpcasecasetype: null,\n        show: false,\n        PerformanceVisible: false, // 显示性能运行模式\n        enviromentnameList: [], // 环境列表\n        apiList: [], // api列表\n        deployunitList: [], // 发布单元列表\n        multipleSelection: [], // 执行计划表格被选中的内容\n        casemultipleSelection: [], // 用例表格被选中的内容\n        executeplanList: [], // 执行计划列表\n        testcaseList: [], // 用例列表\n        testcaselastList: [], // 经过用例列表和已装载的用例组合出的结果列表\n        executeplancaseList: [], // 执行计划装载用例列表\n        executeplancaseexistList: [], // 查询执行计划已存在的用例列表\n        executeplancaseremovetList: [], // 查询执行计划需要删除存在的用例列表\n        executeplanstopList: [], // 停止执行计划列表\n        tmpplanbatchList: [], // 计划批次列表\n        paramsList: [], // 参数列表\n        listLoading: false, // 数据加载等待动画\n        caselistLoading: false, // 用例列表页面数据加载等待动画\n        total: 0, // 数据总数\n        casetotal: 0, // 用例数据总数\n        apiQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          deployunitname: '' // 获取字典表入参\n        },\n        listQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          executeplanname: ''\n        },\n        caselistQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null\n        },\n        dialogStatus: 'add',\n        dialogFormVisible: false,\n        casedialogFormVisible: false,\n        batchdialogFormVisible: false,\n        CollectionParamsFormVisible: false,\n        modifyparamdialogFormVisible: false,\n        loadcase: '装载用例',\n        loadbatch: '执行计划',\n        textMap: {\n          updateRole: '修改测试任务',\n          update: '修改测试任务',\n          add: '添加测试任务'\n        },\n        paramstextMap: {\n          updateRole: '修改参数',\n          update: '修改参数',\n          add: '添加参数'\n        },\n        diclevelQuery: {\n          page: 1, // 页码\n          size: 100, // 每页数量\n          diccode: 'planbusinesstype' // 获取字典表入参\n        },\n        btnLoading: false, // 按钮等待动画\n        casebtnLoading: false, // 按钮等待动画\n        execbtnLoading: false, // 按钮等待动画\n        tmpexecuteplan: {\n          id: '',\n          executeplanname: '',\n          enviromentname: '',\n          envid: '',\n          status: '',\n          usetype: '',\n          businesstype: '',\n          ip: '',\n          memo: '',\n          creator: '',\n          runmode: ''\n        },\n        tmpplanbatch: {\n          executeplanid: '',\n          executeplanname: '',\n          batchname: '',\n          creator: '',\n          exectype: '',\n          exectmpdate: '',\n          execdate: '',\n          exectime: ''\n        },\n        tmpplanenv: {\n          id: '',\n          envid: '',\n          enviromentname: ''\n        },\n        tmpapicases: {\n          id: '',\n          casename: '',\n          deployunitname: '',\n          apiname: '',\n          casejmxname: '',\n          casecontent: '',\n          expect: '',\n          level: '',\n          memo: '',\n          creator: 'admin'\n        },\n        tmpparam: {\n          id: '',\n          executeplanid: '',\n          paramstype: '',\n          keyname: '',\n          keyvalue: ''\n        },\n        tmpep: {\n          executeplanid: ''\n        },\n        search: {\n          page: 1,\n          size: 10,\n          executeplanname: null,\n          businesstype: ''\n        },\n        searchcase: {\n          page: 1,\n          size: 10,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null\n        },\n        searchparam: {\n          page: 1,\n          size: 10\n        }\n      }\n    },\n\n    computed: {\n      ...mapGetters(['name', 'sidebar', 'avatar'])\n    },\n\n    created() {\n      this.getexecuteplanList()\n      this.getapiList()\n      this.getdepunitList()\n      this.getenviromentallList()\n      this.getdatabydiccodeList()\n    },\n\n    methods: {\n      /**\n       * 获取组件名字典列表\n       */\n      getdatabydiccodeList() {\n        getdatabydiccodeList(this.diclevelQuery).then(response => {\n          this.planbusinessdiclist = response.data.list\n        }).catch(res => {\n          this.$message.error('加载组件名字典列表失败')\n        })\n      },\n\n      unix2CurrentTime,\n\n      /**\n       * 获取params列表\n       */\n      searchparamsbyepid() {\n        console.log(this.tmpep)\n        searchparamsbyepid(this.tmpep).then(response => {\n          this.paramsList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载params列表失败')\n        })\n      },\n      /**\n       * 停止执行计划\n       */\n      stopexecuteplanList() {\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'waiting' || this.multipleSelection[i].status === 'new' || this.multipleSelection[i].status === 'finish' || this.multipleSelection[i].status === 'stop') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者只有运行中才可以停止')\n        } else {\n          for (let i = 0; i < this.multipleSelection.length; i++) {\n            this.executeplanstopList.push({\n              'id': this.multipleSelection[i].id,\n              'status': 'stop'\n            })\n          }\n          updateexecuteplanstatus(this.executeplanstopList).then(() => {\n            this.$message.success('已停止执行计划')\n            this.btnLoading = false\n          }).catch(res => {\n            this.$message.error('停止计划执行失败')\n            this.btnLoading = false\n          })\n        }\n        this.getexecuteplanList()\n      },\n      /**\n       * 添加执行计划批次\n       */\n      savebatchandexecuteplancase() {\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n              return\n            }\n            if (this.multipleSelection.length > 1) {\n              this.$message.error('不支持多执行计划一起提交，单个提交')\n              return\n            }\n            this.tmpplanbatch.executeplanname = this.multipleSelection[0].executeplanname\n            this.tmpplanbatch.execdate = this.tmpplanbatch.exectmpdate + ' ' + this.tmpplanbatch.exectime + ':00'\n            if (this.tmpplanbatch.execdate === ':00') {\n              this.tmpplanbatch.execdate = '/'\n            }\n            if (this.tmpplanbatch.exectmpdate === '') {\n              this.tmpplanbatch.execdate = this.tmpplanbatch.exectime + ':00'\n            }\n            addexecuteplanbatch(this.tmpplanbatch).then(() => {\n              this.executeplancase()\n              this.batchdialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('计划执行失败')\n            })\n          }\n        })\n      },\n      /**\n       * 执行执行计划\n       */\n      executeplancase() {\n        this.tmpplanbatchList = []\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            for (let i = 0; i < this.multipleSelection.length; i++) {\n              if (this.multipleSelection[i].status === 'running') {\n                this.multipleSelection.splice(i)\n              }\n            }\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n            } else {\n              if (this.multipleSelection.length > 1) {\n                this.$message.error('不支持多执行计划一起提交，单个提交')\n              } else {\n                for (let i = 0; i < this.multipleSelection.length; i++) {\n                  this.tmpplanbatchList.push({\n                    'planid': this.multipleSelection[0].id,\n                    'batchname': this.tmpplanbatch.batchname\n                  })\n                }\n                executeplan(this.tmpplanbatchList).then(() => {\n                  this.$message.success('测试任务已经提交，即将开始执行')\n                }).catch(res => {\n                  this.$message.error('计划失败')\n                })\n              }\n            }\n            this.getexecuteplanList()\n          }\n        })\n      },\n\n      handleClickTableRow(row, event, column) {\n        // console.log(row)\n        // console.log(column)\n        // this.$refs.fileTable.toggleRowSelection(row)\n      },\n      handleSelectionChange(rows) {\n        // console.log(rows)\n        this.multipleSelection = rows\n        console.log('00000000000000000000000000')\n        console.log(this.multipleSelection)\n      },\n      casehandleClickTableRow(row, event, column) {\n        console.log(row)\n      },\n\n      casehandleSelectionChange(rows) {\n        this.casemultipleSelection = rows\n        // console.log(this.casemultipleSelection)\n      },\n\n      exectypeselectChanged(e) {\n        if (e === '立即执行') {\n          this.datevisible = false\n          this.timevisible = false\n        }\n        if (e === '某天定时') {\n          this.datevisible = true\n          this.timevisible = true\n          this.tmpplanbatch.execdate = ''\n          this.tmpplanbatch.exectime = ''\n        }\n        if (e === '每天定时') {\n          this.datevisible = false\n          this.timevisible = true\n          this.tmpplanbatch.exectime = ''\n        }\n      },\n      /**\n       * 参数胡类型选择  e的值为options的选值\n       */\n      paramstypeselectChanged(e) {\n        this.tmpparam.keyname = ''\n        this.tmpparam.keyvalue = ''\n      },\n      /**\n       * 获取执行计划列表\n       */\n      getexecuteplanList() {\n        this.search.execplanname = this.tmpexecplanname\n        this.search.batchname = this.tmpbatchname\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n          this.listLoading = false\n        }).catch(res => {\n          this.$message.error('加载字典列表失败')\n        })\n      },\n\n      searchBy() {\n        this.search.page = 1\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.itemKey = Math.random()\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n        }).catch(res => {\n          this.$message.error('搜索失败')\n        })\n        this.tmpexecuteplanname = this.search.executeplanname\n        this.listLoading = false\n        this.btnLoading = false\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      handleSizeChange(size) {\n        this.search.page = 1\n        this.search.size = size\n        this.getexecuteplanList()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      handleCurrentChange(page) {\n        this.search.page = page\n        this.getexecuteplanList()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      getIndex(index) {\n        return (this.search.page - 1) * this.search.size + index + 1\n      },\n\n      paramgetIndex(index) {\n        return (this.searchparam.page - 1) * this.searchparam.size + index + 1\n      },\n\n      /**\n       * 环境下拉框活的环境id\n       */\n      enviromentselectChanged(e) {\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === e) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n          console.log(this.enviromentnameList[i].id)\n        }\n      },\n\n      /**\n       * 发布单元下拉选择事件获取发布单元id  e的值为options的选值\n       */\n      selectChanged(e) {\n        this.apiList = null\n        this.apiQuery.deployunitname = e\n        getapiList(this.apiQuery).then(response => {\n          this.apiList = response.data.list\n          // console.log(this.apiList)\n          // this.casetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n      /**\n       * 获取api列表\n       */\n      getapiList() {\n        this.caselistLoading = true\n        getapiList(this.listQuery).then(response => {\n          this.apiList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      /**\n       * 获取环境列表\n       */\n      getenviromentallList() {\n        getenviromentallList().then(response => {\n          this.enviromentnameList = response.data\n        }).catch(res => {\n          this.$message.error('加载环境列表失败')\n        })\n      },\n\n      /**\n       * 获取发布单元列表\n       */\n      getdepunitList() {\n        this.caselistLoading = true\n        getdepunitList(this.listQuery).then(response => {\n          this.deployunitList = response.data.list\n          // this.casetotal = response.data.total\n          // this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载发布单元列表失败')\n        })\n      },\n\n      /**\n       * 获取用例列表\n       */\n      getcaseList() {\n        this.caselistLoading = true\n        getapicasesList(this.listQuery).then(response => {\n          this.apicasesList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载用例列表失败')\n        })\n      },\n\n      /**\n       * 获取发布单元和api的用例\n       */\n      searchcaseBy() {\n        this.searchtestplanexistcase()\n      },\n\n      // 已废弃\n      async gettestcaselastList() {\n        console.log(this.testcaseList.length)\n        console.log(this.executeplancaseexistList.length)\n        for (let i = 0; i < this.testcaseList.length; i++) {\n          for (let j = 0; j < this.executeplancaseexistList.length; j++) {\n            if (this.testcaseList[i].id === this.executeplancaseexistList[j].testcaseid) {\n              this.testcaselastList.push({\n                'checkstats': true,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            } else {\n              this.testcaselastList.push({\n                'checkstats': false,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            }\n          }\n        }\n        console.log(this.testcaselastList)\n      },\n\n      /**\n       * 获取发布单元和api的用例，已废弃\n       */\n      async searchcaseBydepandapi() {\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.casebtnLoading = true\n            this.caselistLoading = true\n            this.searchcase.page = this.caselistQuery.page\n            this.searchcase.size = this.caselistQuery.size\n            getapicases(this.searchcase).then(response => {\n              this.testcaseList = response.data.list\n              console.log(this.testcaseList.length)\n              this.casetotal = response.data.total\n            }).catch(res => {\n              this.$message.error('搜索失败')\n            })\n            this.caselistLoading = false\n            this.casebtnLoading = false\n          }\n        })\n      },\n\n      /**\n       * 获取执行计划下发布单元和api已的用例,如果是已装载过的，会带上装载状态\n       */\n      searchtestplanexistcase() {\n        this.testcaselastList = []\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.searchcase.executeplanid = this.tmpexecuteplan.id\n            this.searchcase.casetype = this.tmpexecuteplan.usetype\n            // this.searchcase.page = this.caselistQuery.page\n            // this.searchcase.size = this.caselistQuery.size\n            this.searchcase.page = 1\n            searchtestplancases(this.searchcase).then(response => {\n              this.testcaselastList = response.data.list\n              this.casetotal = response.data.total\n              this.$nextTick(() => {\n                for (let i = 0; i < this.testcaselastList.length; i++) {\n                  if (this.testcaselastList[i].status === true) {\n                    this.$refs.caseTable.toggleRowSelection(this.testcaselastList[i], true)\n                  }\n                }\n              })\n            }).catch(res => {\n              this.$message.error('获取已装载的用例失败')\n            })\n          }\n        })\n        this.tmpcasedeployunitname = this.searchcase.deployunitname\n        this.tmpcaseapiname = this.searchcase.apiname\n        this.tmpcaseexecuteplanid = this.searchcase.executeplanid\n        this.tmpcasecasetype = this.searchcase.casetype\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      casehandleSizeChange(size) {\n        this.searchcase.page = 1\n        this.searchcase.size = size\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      casehandleCurrentChange(page) {\n        this.searchcase.page = page\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      casegetIndex(index) {\n        return (this.searchcase.page - 1) * this.searchcase.size + index + 1\n      },\n      /**\n       * 显示添加执行计划对话框\n       */\n      showAddexecuteplanDialog() {\n        // 显示新增对话框\n        this.dialogFormVisible = true\n        this.dialogStatus = 'add'\n        this.tmpexecuteplan.id = ''\n        this.tmpexecuteplan.executeplanname = ''\n        this.tmpexecuteplan.status = 'new'\n        this.tmpexecuteplan.memo = ''\n        this.tmpexecuteplan.usetype = ''\n        this.tmpexecuteplan.enviromentname = ''\n        this.tmpexecuteplan.businesstype = ''\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = ''\n      },\n\n      showplanparamsDialog(index) {\n        // 显示新增对话框\n        this.CollectionParamsFormVisible = true\n        this.tmpparam.executeplanid = this.executeplanList[index].id\n        this.tmpep.executeplanid = this.executeplanList[index].id\n        this.searchparamsbyepid()\n      },\n\n      // 显示新增对话框\n      showAddapiparamsDialog() {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'add'\n        this.tmpparam.id = ''\n        this.tmpparam.paramstype = ''\n        this.tmpparam.keyname = ''\n        this.tmpparam.keyvalue = ''\n      },\n\n      showUpdateparamsDialog(index) {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'update'\n        this.tmpparam.id = this.paramsList[index].id\n        this.tmpparam.paramstype = this.paramsList[index].paramstype\n        this.tmpparam.keyname = this.paramsList[index].keyname\n        this.tmpparam.keyvalue = this.paramsList[index].keyvalue\n      },\n      /**\n       * 显示添加执行计划批次对话框\n       */\n      showplanbatchDialog() {\n        this.tmpplanbatch.exectmpdate = ''\n        this.tmpplanbatch.exectime = ''\n        this.tmpplanbatch.execdate = ''\n        this.tmpplanbatch.exectype = ''\n        this.timevisible = false\n        this.datevisible = false\n        // 显示新增对话框\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'running') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n        } else {\n          if (this.multipleSelection.length > 1) {\n            this.$message.error('不支持多执行计划一起提交，单个提交')\n          } else {\n            this.tmpplanenv.id = this.multipleSelection[0].id\n            this.tmpplanenv.envid = this.multipleSelection[0].envid\n            this.tmpplanenv.enviromentname = this.multipleSelection[0].enviromentname\n            checkplancondition(this.tmpplanenv).then(() => {\n              this.batchdialogFormVisible = true\n              this.tmpplanbatch.executeplanid = this.multipleSelection[0].id\n              this.tmpplanbatch.creator = this.name\n              this.tmpplanbatch.batchname = ''\n            }).catch(res => {\n              // this.$message.error('执行失败')\n            })\n          }\n        }\n      },\n\n      /**\n       * 添加params\n       */\n      addparams() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            addexecuteplanparam(this.tmpparam).then(() => {\n              this.$message.success('添加成功')\n              this.modifyparamdialogFormVisible = false\n              this.searchparamsbyepid()\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 更新param\n       */\n      updatparam() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            updateexecuteplanparams(this.tmpparam).then(() => {\n              this.$message.success('更新成功')\n              this.searchparamsbyepid()\n              this.modifyparamdialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 删除param\n       * @param index api下标\n       */\n      removeexecuteplanparam(index) {\n        this.$confirm('删除该参数？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.paramsList[index].id\n          removeexecuteplanparam(id).then(() => {\n            this.$message.success('删除成功')\n            this.searchparamsbyepid()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 显示修改执行计划对话框\n       * @param index 执行计划下标\n       */\n      showUpdateexecuteplanDialog(index) {\n        this.dialogFormVisible = true\n        this.dialogStatus = 'update'\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.tmpexecuteplan.enviromentname = this.executeplanList[index].enviromentname\n        this.tmpexecuteplan.businesstype = this.executeplanList[index].businesstype\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = this.executeplanList[index].runmode\n        console.log(this.tmpexecuteplan.runmode)\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === this.tmpexecuteplan.enviromentname) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n        }\n      },\n\n      /**\n       * 装载执行计划的用例\n       */\n      addexecuteplantestcase() {\n        this.executeplancaseList = []\n        if (this.casemultipleSelection.length === 0) {\n          this.$message.error('请选择装载的用例')\n        } else {\n          for (let i = 0; i < this.casemultipleSelection.length; i++) {\n            this.executeplancaseList.push({\n              'executeplanid': this.tmpexecuteplan.id,\n              'deployunitid': this.casemultipleSelection[i].deployunitid,\n              'apiid': this.casemultipleSelection[i].apiid,\n              'deployunitname': this.casemultipleSelection[i].deployunitname,\n              'apiname': this.casemultipleSelection[i].apiname,\n              'testcaseid': this.casemultipleSelection[i].id,\n              'casename': this.casemultipleSelection[i].casename\n            })\n          }\n          addexecuteplantestcase(this.executeplancaseList).then(() => {\n            this.$message.success('装载成功')\n          }).catch(res => {\n            this.$message.error('装载失败')\n          })\n        }\n      },\n\n      /**\n       * 删除装载的用例\n       */\n      removeexecuteplantestcase() {\n        this.executeplancaseremovetList = []\n        if (this.testcaselastList.length === this.casemultipleSelection.length) {\n          this.$message.error('未找到需要取消装载的用例')\n        } else {\n          for (let i = 0; i < this.testcaselastList.length; i++) {\n            var findflag = false\n            for (let j = 0; j < this.casemultipleSelection.length; j++) {\n              if (this.testcaselastList[i].id === this.casemultipleSelection[j].id) {\n                findflag = true\n                break\n              }\n            }\n            // 表示未选中的记录，需要删除\n            this.testcaselastList[i].id\n            if (!findflag) {\n              this.executeplancaseremovetList.push({\n                'executeplanid': this.tmpexecuteplan.id,\n                'deployunitname': this.testcaselastList[i].deployunitname,\n                'apiname': this.testcaselastList[i].apiname,\n                'testcaseid': this.testcaselastList[i].id,\n                'casename': this.testcaselastList[i].casename\n              })\n            }\n          }\n          console.log(this.executeplancaseremovetList)\n          removeexecuteplantestcase(this.executeplancaseremovetList).then(() => {\n            this.$message.success('取消装载用例成功')\n          }).catch(res => {\n            this.$message.error('取消装载用例失败')\n          })\n        }\n      },\n      /**\n       * 显示用例对话框\n       * @param index 执行计划下标\n       */\n      showTestCaseDialog(index) {\n        this.casedialogFormVisible = true\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.searchcase.deployunitname = null\n        this.searchcase.apiname = null\n        this.testcaselastList = []\n        this.casetotal = 0\n      },\n      /**\n       * 更新执行计划\n       */\n      updateexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            updateexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('更新成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n      /**\n       * 删除字典\n       * @param index 执行计划下标\n       */\n      removeexecuteplan(index) {\n        this.$confirm('删除该执行计划？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.executeplanList[index].id\n          removeexecuteplan(id).then(() => {\n            this.$message.success('删除成功')\n            this.getexecuteplanList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 执行计划资料是否唯一\n       * @param 执行计划\n       */\n      isUniqueDetail(executeplan) {\n        for (let i = 0; i < this.executeplanList.length; i++) {\n          if (this.executeplanList[i].id !== executeplan.id) { // 排除自己\n            if (this.executeplanList[i].executeplanname === executeplan.executeplanname) {\n              this.$message.error('执行计划名已存在')\n              return false\n            }\n          }\n        }\n        return true\n      }\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/executecenter/testtask/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"icon\":\"el-icon-refresh\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.getexecuteplanList($event)}}},[_vm._v(\"刷新\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanbatchDialog($event)}}},[_vm._v(\"运行\")]):_vm._e()],1),_vm._v(\" \"),(_vm.hasPermission('executeplan:search'))?_c('span',[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"任务名称\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchBy($event)}},model:{value:(_vm.search.executeplanname),callback:function ($$v) {_vm.$set(_vm.search, \"executeplanname\", $$v)},expression:\"search.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"businesstype\",\"label\":\"业务类型：\"}},[_c('el-select',{attrs:{\"placeholder\":\"业务类型\"},model:{value:(_vm.search.businesstype),callback:function ($$v) {_vm.$set(_vm.search, \"businesstype\", $$v)},expression:\"search.businesstype\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(businessdicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":businessdicitem.dicitmevalue,\"value\":businessdicitem.dicitmevalue}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemplanKey,ref:\"fileTable\",attrs:{\"data\":_vm.executeplanList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.handleClickTableRow,\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"40\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"任务名称\",\"align\":\"center\",\"prop\":\"executeplanname\",\"width\":\"100\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"envid\",\"align\":\"center\",\"prop\":\"envid\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"状态\",\"align\":\"center\",\"prop\":\"status\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"业务类型\",\"align\":\"center\",\"prop\":\"businesstype\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"执行环境\",\"align\":\"center\",\"prop\":\"enviromentname\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"类型\",\"align\":\"center\",\"prop\":\"usetype\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"运行模式\",\"align\":\"center\",\"prop\":\"runmode\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作人\",\"align\":\"center\",\"prop\":\"creator\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"描述\",\"align\":\"center\",\"prop\":\"memo\",\"width\":\"220\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"创建时间\",\"align\":\"center\",\"prop\":\"createTime\",\"width\":\"140\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.createTime)))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"最后修改时间\",\"align\":\"center\",\"prop\":\"lastmodifyTime\",\"width\":\"140\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.lastmodifyTime))+\"\\n      \")]}}])})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.search.page,\"page-size\":_vm.search.size,\"total\":_vm.total,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-454f2477\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/executecenter/testtask/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-454f2477\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/executecenter/testtask/index.vue\n// module id = null\n// module chunks = ","import request from '@/utils/request'\n\nexport function getexecuteplanparamList(params) {\n  return request({\n    url: '/executeplan/params',\n    method: 'get',\n    params\n  })\n}\n\nexport function searchparamsbyepid(params) {\n  return request({\n    url: '/executeplan/params/searchparamsbyepid',\n    method: 'post',\n    data: params\n  })\n}\n\nexport function search(executeplanForm) {\n  return request({\n    url: '/executeplan/params/search',\n    method: 'post',\n    data: executeplanForm\n  })\n}\n\nexport function addexecuteplanparam(executeplanForm) {\n  return request({\n    url: '/executeplan/params',\n    method: 'post',\n    data: executeplanForm\n  })\n}\n\nexport function updateexecuteplanparams(executeplanForm) {\n  return request({\n    url: '/executeplan/params/detail',\n    method: 'put',\n    data: executeplanForm\n  })\n}\n\nexport function removeexecuteplanparam(executeplanId) {\n  return request({\n    url: '/executeplan/params/' + executeplanId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/executecenter/executeplanparam.js"],"sourceRoot":""}