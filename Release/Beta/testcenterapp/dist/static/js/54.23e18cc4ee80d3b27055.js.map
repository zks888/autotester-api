{"version":3,"sources":["webpack:///./src/api/assets/tester.js","webpack:///src/views/assets/tester/index.vue","webpack:///./src/views/assets/tester/index.vue?fbbc","webpack:///./src/views/assets/tester/index.vue"],"names":["search","testerForm","Object","request","url","method","data","tester","filters","statusFilter","status","published","draft","deleted","tmptestername","tmptestertitle","tmptesterorg","testerList","testertitleList","testerorgList","listLoading","diclevelQuery","page","size","diccode","dicorgQuery","total","listQuery","testername","testertitle","testerorg","dialogStatus","dialogFormVisible","textMap","updateRole","update","add","btnLoading","tmptester","id","testermemo","created","this","gettesterList","gettestertitleList","gettesterorgList","methods","unix2CurrentTime","_this","dictionary","then","response","list","catch","res","$message","error","_this2","console","log","params","_this3","searchBy","_this4","searchBypageing","_this5","handleSizeChange","handleCurrentChange","getIndex","index","showAddtesterDialog","addtester","_this6","$refs","validate","valid","isUniqueDetail","success","showUpdatetesterDialog","updatetester","_this7","removetester","_this8","$confirm","confirmButtonText","cancelButtonText","type","testerId","info","i","length","assets_tester","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","hasPermission","icon","nativeOn","click","$event","preventDefault","_v","_e","placeholder","keyup","indexOf","_k","keyCode","key","model","value","callback","$$v","$set","expression","label","_l","dicitemname","loading","on","directives","name","rawName","modifiers","body","element-loading-text","border","fit","highlight-current-row","align","width","scopedSlots","_u","fn","scope","domProps","textContent","_s","$index","prop","row","createTime","lastmodifyTime","current-page","page-size","page-sizes","layout","size-change","current-change","title","visible","update:visible","ref","staticStyle","margin-left","status-icon","label-position","label-width","required","prefix-icon","auto-complete","display","slot","resetFields","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/54.23e18cc4ee80d3b27055.js","sourcesContent":["import request from '@/utils/request'\n\nexport function gettesterList(params) {\n  return request({\n    url: '/tester',\n    method: 'get',\n    params\n  })\n}\n\nexport function search(testerForm) {\n  return request({\n    url: '/tester/search',\n    method: 'post',\n    data: testerForm\n  })\n}\n\nexport function addtester(testerForm) {\n  return request({\n    url: '/tester',\n    method: 'post',\n    data: testerForm\n  })\n}\n\nexport function updatetester(testerForm) {\n  return request({\n    url: '/tester/detail',\n    method: 'put',\n    data: testerForm\n  })\n}\n\nexport function removetester(testerId) {\n  return request({\n    url: '/tester/' + testerId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/assets/tester.js","<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form :inline=\"true\">\n        <el-form-item>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            icon=\"el-icon-refresh\"\n            v-if=\"hasPermission('tester:list')\"\n            @click.native.prevent=\"gettesterList\"\n          >刷新\n          </el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            icon=\"el-icon-plus\"\n            v-if=\"hasPermission('tester:add')\"\n            @click.native.prevent=\"showAddtesterDialog\"\n          >添加测试人员\n          </el-button>\n        </el-form-item>\n\n        <span v-if=\"hasPermission('tester:search')\">\n          <el-form-item>\n            <el-input v-model=\"search.testername\" @keyup.enter.native=\"searchBy\" placeholder=\"测试人员名\"></el-input>\n          </el-form-item>\n\n          <el-form-item>\n            <el-select v-model=\"search.testertitle\" placeholder=\"职位\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(testertitle, index) in testertitleList\" :key=\"index\">\n                <el-option :label=\"testertitle.dicitemname\" :value=\"testertitle.dicitemname\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item>\n            <el-select v-model=\"search.testerorg\" placeholder=\"组织\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(testerorg, index) in testerorgList\" :key=\"index\">\n                <el-option :label=\"testerorg.dicitemname\" :value=\"testerorg.dicitemname\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n      </el-form>\n    </div>\n    <el-table\n      :data=\"testerList\"\n      v-loading.body=\"listLoading\"\n      element-loading-text=\"loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"></span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"测试人员名\" align=\"center\" prop=\"testername\" width=\"120\"/>\n      <el-table-column label=\"职务\" align=\"center\" prop=\"testertitle\" width=\"100\"/>\n      <el-table-column label=\"所属组织\" align=\"center\" prop=\"testerorg\" width=\"100\"/>\n      <el-table-column label=\"备注\" align=\"center\" prop=\"testermemo\" width=\"100\"/>\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"160\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.createTime) }}</template>\n      </el-table-column>\n      <el-table-column label=\"最后修改时间\" align=\"center\" prop=\"lastmodifyTime\" width=\"160\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.lastmodifyTime) }}\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"管理\" align=\"center\"\n                       v-if=\"hasPermission('tester:update')  || hasPermission('tester:delete')\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"warning\"\n            size=\"mini\"\n            v-if=\"hasPermission('tester:update')\"\n            @click.native.prevent=\"showUpdatetesterDialog(scope.$index)\"\n          >修改\n          </el-button>\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            v-if=\"hasPermission('tester:delete')\"\n            @click.native.prevent=\"removetester(scope.$index)\"\n          >删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"listQuery.page\"\n      :page-size=\"listQuery.size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30, 40]\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n    ></el-pagination>\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"100px\"\n        style=\"width: 300px; margin-left:50px;\"\n        :model=\"tmptester\"\n        ref=\"tmptester\"\n      >\n        <el-form-item label=\"测试人员名\" prop=\"testername\" required>\n          <el-input\n            type=\"text\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model=\"tmptester.testername\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"职位\" prop=\"testertitle\" required>\n          <el-select v-model=\"tmptester.testertitle\" placeholder=\"职位\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(testertitle, index) in testertitleList\" :key=\"index\">\n              <el-option :label=\"testertitle.dicitemname\" :value=\"testertitle.dicitemname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"组织\" prop=\"testerorg\" required>\n          <el-select v-model=\"tmptester.testerorg\" placeholder=\"组织\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(testerorg, index) in testerorgList\" :key=\"index\">\n              <el-option :label=\"testerorg.dicitemname\" :value=\"testerorg.dicitemname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"备注\" prop=\"testermemo\" required>\n          <el-input\n            type=\"text\"\n            prefix-icon=\"el-icon-message\"\n            auto-complete=\"off\"\n            v-model=\"tmptester.testermemo\"\n          />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"dialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"danger\"\n          v-if=\"dialogStatus === 'add'\"\n          @click.native.prevent=\"$refs['tmptester'].resetFields()\"\n        >重置\n        </el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addtester\"\n        >添加\n        </el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updatetester\"\n        >修改\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\n  import { gettesterList as gettesterList, search, addtester, updatetester, removetester } from '@/api/assets/tester'\n  import { getdatabydiccodeList as getdatabydiccodeList } from '@/api/system/dictionary'\n  import { unix2CurrentTime } from '@/utils'\n\n  export default {\n    filters: {\n      statusFilter(status) {\n        const statusMap = {\n          published: 'success',\n          draft: 'gray',\n          deleted: 'danger'\n        }\n        return statusMap[status]\n      }\n    },\n    data() {\n      return {\n        tmptestername: null,\n        tmptestertitle: null,\n        tmptesterorg: null,\n        testerList: [], // 测试人员列表\n        testertitleList: [], // 测试人员职务列表\n        testerorgList: [], // 测试人员职务列表\n        listLoading: false, // 数据加载等待动画\n        diclevelQuery: {\n          page: 1, // 页码\n          size: 30, // 每页数量\n          diccode: 'testerlevel' // 获取字典表入参\n        },\n        dicorgQuery: {\n          page: 1, // 页码\n          size: 30, // 每页数量\n          diccode: 'testerorg' // 获取字典表入参\n        },\n        total: 0, // 数据总数\n        listQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          testername: null,\n          testertitle: null,\n          testerorg: null\n        },\n        dialogStatus: 'add',\n        dialogFormVisible: false,\n        textMap: {\n          updateRole: '修改测试人员',\n          update: '修改测试人员',\n          add: '添加测试人员'\n        },\n        btnLoading: false, // 按钮等待动画\n        tmptester: {\n          id: '',\n          testername: '',\n          testertitle: '',\n          testerorg: '',\n          testermemo: ''\n        },\n        search: {\n          page: null,\n          size: null,\n          testername: null,\n          testertitle: null,\n          testerorg: null\n        }\n      }\n    },\n\n    created() {\n      this.gettesterList()\n      this.gettestertitleList()\n      this.gettesterorgList()\n    },\n\n    methods: {\n      unix2CurrentTime,\n\n      /**\n       * 获取字典表编码为testlevel的数据\n       */\n      gettestertitleList() {\n        getdatabydiccodeList(this.diclevelQuery).then(response => {\n          this.testertitleList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载角色职务失败')\n        })\n      },\n\n      /**\n       * 获取字典表编码为testorg的数据\n       */\n      gettesterorgList() {\n        getdatabydiccodeList(this.dicorgQuery).then(response => {\n          this.testerorgList = response.data.list\n          console.log(this.testerorgList)\n        }).catch(res => {\n          this.$message.error('加载角色组织失败')\n        })\n      },\n\n      /**\n       * 获取字典列表\n       */\n      gettesterList() {\n        this.listLoading = true\n        gettesterList(this.listQuery).then(response => {\n          this.testerList = response.data.list\n          this.total = response.data.total\n          this.listLoading = false\n        }).catch(res => {\n          this.$message.error('加载测试人员列表失败')\n        })\n      },\n      searchBy() {\n        this.btnLoading = true\n        this.listLoading = true\n        this.search.page = this.listQuery.page\n        this.search.size = this.listQuery.size\n        search(this.search).then(response => {\n          this.testerList = response.data.list\n          this.total = response.data.total\n        }).catch(res => {\n          this.$message.error('搜索失败')\n        })\n        this.tmptestername = this.search.testername\n        this.tmptestertitle = this.search.testertitle\n        this.tmptesterorg = this.search.testerorg\n        this.listLoading = false\n        this.btnLoading = false\n      },\n\n      searchBypageing() {\n        this.btnLoading = true\n        this.listLoading = true\n        this.listQuery.testername = this.tmptestername\n        this.listQuery.testertitle = this.tmptestertitle\n        this.listQuery.testerorg = this.tmptesterorg\n        search(this.listQuery).then(response => {\n          this.testerList = response.data.list\n          this.total = response.data.total\n        }).catch(res => {\n          this.$message.error('搜索失败')\n        })\n        this.listLoading = false\n        this.btnLoading = false\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      handleSizeChange(size) {\n        this.listQuery.size = size\n        this.listQuery.page = 1\n        this.searchBypageing()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      handleCurrentChange(page) {\n        this.listQuery.page = page\n        this.searchBypageing()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      getIndex(index) {\n        return (this.listQuery.page - 1) * this.listQuery.size + index + 1\n      },\n      /**\n       * 显示添加测试人员对话框\n       */\n      showAddtesterDialog() {\n        // 显示新增对话框\n        this.dialogFormVisible = true\n        this.dialogStatus = 'add'\n        this.tmptester.id = ''\n        this.tmptester.testername = ''\n        this.tmptester.testertitle = ''\n        this.tmptester.testerorg = ''\n        this.tmptester.testermemo = ''\n      },\n      /**\n       * 添加测试人员\n       */\n      addtester() {\n        this.$refs.tmptester.validate(valid => {\n          if (valid && this.isUniqueDetail(this.tmptester)) {\n            this.btnLoading = true\n            addtester(this.tmptester).then(() => {\n              this.$message.success('添加成功')\n              this.gettesterList()\n              this.dialogFormVisible = false\n              this.btnLoading = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n      /**\n       * 显示修改测试人员对话框\n       * @param index 测试人员下标\n       */\n      showUpdatetesterDialog(index) {\n        this.dialogFormVisible = true\n        this.dialogStatus = 'update'\n        this.tmptester.id = this.testerList[index].id\n        this.tmptester.testername = this.testerList[index].testername\n        this.tmptester.testertitle = this.testerList[index].testertitle\n        this.tmptester.testerorg = this.testerList[index].testerorg\n        this.tmptester.testermemo = this.testerList[index].testermemo\n      },\n      /**\n       * 更新测试人员\n       */\n      updatetester() {\n        this.$refs.tmptester.validate(valid => {\n          if (valid && this.isUniqueDetail(this.tmptester)) {\n            updatetester(this.tmptester).then(() => {\n              this.$message.success('更新成功')\n              this.gettesterList()\n              this.dialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 删除测试人员\n       * @param index 测试人员下标\n       */\n      removetester(index) {\n        this.$confirm('删除该测试人员？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.testerList[index].id\n          removetester(id).then(() => {\n            this.$message.success('删除成功')\n            this.gettesterList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 测试人员是否唯一\n       * @param 测试人员\n       */\n      isUniqueDetail(tester) {\n        for (let i = 0; i < this.testerList.length; i++) {\n          if (this.testerList[i].id !== tester.id) { // 排除自己\n            if (this.testerList[i].testername === tester.testername) {\n              this.$message.error('测试人员名已存在')\n              return false\n            }\n          }\n        }\n        return true\n      }\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/assets/tester/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('tester:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"icon\":\"el-icon-refresh\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.gettesterList($event)}}},[_vm._v(\"刷新\\n        \")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('tester:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddtesterDialog($event)}}},[_vm._v(\"添加测试人员\\n        \")]):_vm._e()],1),_vm._v(\" \"),(_vm.hasPermission('tester:search'))?_c('span',[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"测试人员名\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchBy($event)}},model:{value:(_vm.search.testername),callback:function ($$v) {_vm.$set(_vm.search, \"testername\", $$v)},expression:\"search.testername\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-select',{attrs:{\"placeholder\":\"职位\"},model:{value:(_vm.search.testertitle),callback:function ($$v) {_vm.$set(_vm.search, \"testertitle\", $$v)},expression:\"search.testertitle\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.testertitleList),function(testertitle,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":testertitle.dicitemname,\"value\":testertitle.dicitemname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-select',{attrs:{\"placeholder\":\"组织\"},model:{value:(_vm.search.testerorg),callback:function ($$v) {_vm.$set(_vm.search, \"testerorg\", $$v)},expression:\"search.testerorg\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.testerorgList),function(testerorg,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":testerorg.dicitemname,\"value\":testerorg.dicitemname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],attrs:{\"data\":_vm.testerList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"测试人员名\",\"align\":\"center\",\"prop\":\"testername\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"职务\",\"align\":\"center\",\"prop\":\"testertitle\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"所属组织\",\"align\":\"center\",\"prop\":\"testerorg\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"备注\",\"align\":\"center\",\"prop\":\"testermemo\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"创建时间\",\"align\":\"center\",\"prop\":\"createTime\",\"width\":\"160\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.createTime)))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"最后修改时间\",\"align\":\"center\",\"prop\":\"lastmodifyTime\",\"width\":\"160\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.lastmodifyTime))+\"\\n      \")]}}])}),_vm._v(\" \"),(_vm.hasPermission('tester:update')  || _vm.hasPermission('tester:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('tester:update'))?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdatetesterDialog(scope.$index)}}},[_vm._v(\"修改\\n        \")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('tester:delete'))?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removetester(scope.$index)}}},[_vm._v(\"删除\\n        \")]):_vm._e()]}}],null,false,2444114662)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.listQuery.page,\"page-size\":_vm.listQuery.size,\"total\":_vm.total,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.textMap[_vm.dialogStatus],\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"tmptester\",staticClass:\"small-space\",staticStyle:{\"width\":\"300px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"100px\",\"model\":_vm.tmptester}},[_c('el-form-item',{attrs:{\"label\":\"测试人员名\",\"prop\":\"testername\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmptester.testername),callback:function ($$v) {_vm.$set(_vm.tmptester, \"testername\", $$v)},expression:\"tmptester.testername\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"职位\",\"prop\":\"testertitle\",\"required\":\"\"}},[_c('el-select',{attrs:{\"placeholder\":\"职位\"},model:{value:(_vm.tmptester.testertitle),callback:function ($$v) {_vm.$set(_vm.tmptester, \"testertitle\", $$v)},expression:\"tmptester.testertitle\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.testertitleList),function(testertitle,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":testertitle.dicitemname,\"value\":testertitle.dicitemname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"组织\",\"prop\":\"testerorg\",\"required\":\"\"}},[_c('el-select',{attrs:{\"placeholder\":\"组织\"},model:{value:(_vm.tmptester.testerorg),callback:function ($$v) {_vm.$set(_vm.tmptester, \"testerorg\", $$v)},expression:\"tmptester.testerorg\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.testerorgList),function(testerorg,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":testerorg.dicitemname,\"value\":testerorg.dicitemname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"备注\",\"prop\":\"testermemo\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmptester.testermemo),callback:function ($$v) {_vm.$set(_vm.tmptester, \"testermemo\", $$v)},expression:\"tmptester.testermemo\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.dialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.dialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"danger\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.$refs['tmptester'].resetFields()}}},[_vm._v(\"重置\\n      \")]):_vm._e(),_vm._v(\" \"),(_vm.dialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addtester($event)}}},[_vm._v(\"添加\\n      \")]):_vm._e(),_vm._v(\" \"),(_vm.dialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatetester($event)}}},[_vm._v(\"修改\\n      \")]):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-439b3bc5\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/assets/tester/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-439b3bc5\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/assets/tester/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}