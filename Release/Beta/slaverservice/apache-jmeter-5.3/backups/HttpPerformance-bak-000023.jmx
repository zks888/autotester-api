<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="HttpPerformance" enabled="true">
      <stringProp name="TestPlan.comments">HttpPerformanceParams</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="thread" elementType="Argument">
            <stringProp name="Argument.name">thread</stringProp>
            <stringProp name="Argument.value">${__P(thread,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loops" elementType="Argument">
            <stringProp name="Argument.name">loops</stringProp>
            <stringProp name="Argument.value">${__P(loops,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="caseid" elementType="Argument">
            <stringProp name="Argument.name">caseid</stringProp>
            <stringProp name="Argument.value">${__P(caseid,2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testplanid" elementType="Argument">
            <stringProp name="Argument.name">testplanid</stringProp>
            <stringProp name="Argument.value">${__P(testplanid,13)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="batchname" elementType="Argument">
            <stringProp name="Argument.name">batchname</stringProp>
            <stringProp name="Argument.value">${__P(batchname,vvvvvv1111111)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testclass" elementType="Argument">
            <stringProp name="Argument.name">testclass</stringProp>
            <stringProp name="Argument.value">${__P(testclass,retrySendSmsOrFindShortUrl)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testdeployunit" elementType="Argument">
            <stringProp name="Argument.name">testdeployunit</stringProp>
            <stringProp name="Argument.value">${__P(testdeployunit,marketingservice)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="slaverid" elementType="Argument">
            <stringProp name="Argument.name">slaverid</stringProp>
            <stringProp name="Argument.value">${__P(slaverid,5)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="batchid" elementType="Argument">
            <stringProp name="Argument.name">batchid</stringProp>
            <stringProp name="Argument.value">${__P(batchid,25)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="casereportfolder" elementType="Argument">
            <stringProp name="Argument.name">casereportfolder</stringProp>
            <stringProp name="Argument.value">${__P(casereportfolder,/Users/fanseasn/Desktop/testresult/13-2-vvvvvv1111111)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysqlurl" elementType="Argument">
            <stringProp name="Argument.name">mysqlurl</stringProp>
            <stringProp name="Argument.value">${__P(mysqlurl,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysqlusername" elementType="Argument">
            <stringProp name="Argument.name">mysqlusername</stringProp>
            <stringProp name="Argument.value">${__P(mysqlusername,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysqlpassword" elementType="Argument">
            <stringProp name="Argument.name">mysqlpassword</stringProp>
            <stringProp name="Argument.value">${__P(mysqlpassword,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="executeplanname" elementType="Argument">
            <stringProp name="Argument.name">executeplanname</stringProp>
            <stringProp name="Argument.value">${__P(executeplanname,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="casename" elementType="Argument">
            <stringProp name="Argument.name">casename</stringProp>
            <stringProp name="Argument.value">${__P(casename,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expect" elementType="Argument">
            <stringProp name="Argument.name">expect</stringProp>
            <stringProp name="Argument.value">${__P(expect,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocal" elementType="Argument">
            <stringProp name="Argument.name">protocal</stringProp>
            <stringProp name="Argument.value">${__P(protocal,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RequestmMthod" elementType="Argument">
            <stringProp name="Argument.name">RequestmMthod</stringProp>
            <stringProp name="Argument.value">${__P(RequestmMthod,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="casetype" elementType="Argument">
            <stringProp name="Argument.name">casetype</stringProp>
            <stringProp name="Argument.value">${__P(casetype,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="resource" elementType="Argument">
            <stringProp name="Argument.name">resource</stringProp>
            <stringProp name="Argument.value">${__P(resource,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="apistyle" elementType="Argument">
            <stringProp name="Argument.name">apistyle</stringProp>
            <stringProp name="Argument.value">${__P(apistyle,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="requestcontenttype" elementType="Argument">
            <stringProp name="Argument.name">requestcontenttype</stringProp>
            <stringProp name="Argument.value">${__P(requestcontenttype,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="responecontenttype" elementType="Argument">
            <stringProp name="Argument.name">responecontenttype</stringProp>
            <stringProp name="Argument.value">${__P(responecontenttype,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="headjson" elementType="Argument">
            <stringProp name="Argument.name">headjson</stringProp>
            <stringProp name="Argument.value">${__P(headjson,headjson)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="paramsjson" elementType="Argument">
            <stringProp name="Argument.name">paramsjson</stringProp>
            <stringProp name="Argument.value">${__P(paramsjson,paramsjson)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="bodyjson" elementType="Argument">
            <stringProp name="Argument.name">bodyjson</stringProp>
            <stringProp name="Argument.value">${__P(bodyjson,bodyjson)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dubbojson" elementType="Argument">
            <stringProp name="Argument.name">dubbojson</stringProp>
            <stringProp name="Argument.value">${__P(dubbojson,dubbojson)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="db" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">testcenter</stringProp>
        <stringProp name="dbUrl">${mysqlurl}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">${mysqlpassword}</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${mysqlusername}</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="performance" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loops}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${thread}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1502182031000</longProp>
        <longProp name="ThreadGroup.end_time">1502182031000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="${testclass}" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="testplanid" elementType="Argument">
                <stringProp name="Argument.name">testplanid</stringProp>
                <stringProp name="Argument.value">${testplanid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="caseid" elementType="Argument">
                <stringProp name="Argument.name">caseid</stringProp>
                <stringProp name="Argument.value">${caseid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="batchid" elementType="Argument">
                <stringProp name="Argument.name">batchid</stringProp>
                <stringProp name="Argument.value">${batchid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="slaverid" elementType="Argument">
                <stringProp name="Argument.name">slaverid</stringProp>
                <stringProp name="Argument.value">${slaverid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="batchname" elementType="Argument">
                <stringProp name="Argument.name">batchname</stringProp>
                <stringProp name="Argument.value">${batchname}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="executeplanname" elementType="Argument">
                <stringProp name="Argument.name">executeplanname</stringProp>
                <stringProp name="Argument.value">${executeplanname}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="casename" elementType="Argument">
                <stringProp name="Argument.name">casename</stringProp>
                <stringProp name="Argument.value">${casename}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="expect" elementType="Argument">
                <stringProp name="Argument.name">expect</stringProp>
                <stringProp name="Argument.value">${expect}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="protocal" elementType="Argument">
                <stringProp name="Argument.name">protocal</stringProp>
                <stringProp name="Argument.value">${protocal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RequestmMthod" elementType="Argument">
                <stringProp name="Argument.name">RequestmMthod</stringProp>
                <stringProp name="Argument.value">${RequestmMthod}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="casetype" elementType="Argument">
                <stringProp name="Argument.name">casetype</stringProp>
                <stringProp name="Argument.value">${casetype}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="resource" elementType="Argument">
                <stringProp name="Argument.name">resource</stringProp>
                <stringProp name="Argument.value">${resource}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="apistyle" elementType="Argument">
                <stringProp name="Argument.name">apistyle</stringProp>
                <stringProp name="Argument.value">${apistyle}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="requestcontenttype" elementType="Argument">
                <stringProp name="Argument.name">requestcontenttype</stringProp>
                <stringProp name="Argument.value">${requestcontenttype}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="responecontenttype" elementType="Argument">
                <stringProp name="Argument.name">responecontenttype</stringProp>
                <stringProp name="Argument.value">${responecontenttype}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="headjson" elementType="Argument">
                <stringProp name="Argument.name">headjson</stringProp>
                <stringProp name="Argument.value">${headjson}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="paramsjson" elementType="Argument">
                <stringProp name="Argument.name">paramsjson</stringProp>
                <stringProp name="Argument.value">${paramsjson}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="bodyjson" elementType="Argument">
                <stringProp name="Argument.name">bodyjson</stringProp>
                <stringProp name="Argument.value">${bodyjson}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dubbojson" elementType="Argument">
                <stringProp name="Argument.name">dubbojson</stringProp>
                <stringProp name="Argument.value">${dubbojson}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mysqlurl" elementType="Argument">
                <stringProp name="Argument.name">mysqlurl</stringProp>
                <stringProp name="Argument.value">${mysqlurl}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mysqlusername" elementType="Argument">
                <stringProp name="Argument.name">mysqlusername</stringProp>
                <stringProp name="Argument.value">${mysqlusername}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mysqlpassword" elementType="Argument">
                <stringProp name="Argument.name">mysqlpassword</stringProp>
                <stringProp name="Argument.value">${mysqlpassword}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.api.autotest.test.${testdeployunit}.${testclass}</stringProp>
        </JavaSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="postcondition" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="处理后置条件" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="testplanid" elementType="Argument">
                <stringProp name="Argument.name">testplanid</stringProp>
                <stringProp name="Argument.value">${testplanid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="caseid" elementType="Argument">
                <stringProp name="Argument.name">caseid</stringProp>
                <stringProp name="Argument.value">${caseid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="batchid" elementType="Argument">
                <stringProp name="Argument.name">batchid</stringProp>
                <stringProp name="Argument.value">${batchid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="slaverid" elementType="Argument">
                <stringProp name="Argument.name">slaverid</stringProp>
                <stringProp name="Argument.value">${slaverid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="batchname" elementType="Argument">
                <stringProp name="Argument.name">batchname</stringProp>
                <stringProp name="Argument.value">${batchname}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="casetype" elementType="Argument">
                <stringProp name="Argument.name">casetype</stringProp>
                <stringProp name="Argument.value">${__property(casetype)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="casereportfolder" elementType="Argument">
                <stringProp name="Argument.name">casereportfolder</stringProp>
                <stringProp name="Argument.value">${casereportfolder}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testclass" elementType="Argument">
                <stringProp name="Argument.name">testclass</stringProp>
                <stringProp name="Argument.value">${testclass}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="start" elementType="Argument">
                <stringProp name="Argument.name">start</stringProp>
                <stringProp name="Argument.value">${__property(start)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mysqlurl" elementType="Argument">
                <stringProp name="Argument.name">mysqlurl</stringProp>
                <stringProp name="Argument.value">${mysqlurl}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mysqlusername" elementType="Argument">
                <stringProp name="Argument.name">mysqlusername</stringProp>
                <stringProp name="Argument.value">${mysqlusername}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mysqlpassword" elementType="Argument">
                <stringProp name="Argument.name">mysqlpassword</stringProp>
                <stringProp name="Argument.value">${mysqlpassword}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.api.autotest.core.postcondition</stringProp>
        </JavaSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
